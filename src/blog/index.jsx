import React from 'react'
import Firebase from 'firebase'

/*
db.child('users/mg/name') => access JSON node database/users/mg/name

 Ways to save data
 set({})
 set(null) -> remove data
 update()
 push() -> add mew item to a collection
 transaction()
*/

function createUsers(db) {
  const usersRef= db.child('users')

  // method 1, overwrites if exists
  usersRef.set({
    alanisawesome: {
      date_of_birth: 'June 23, 1912',
      full_name: 'Alan Turing'
    },
    gracehop: {
      date_of_birth: 'December 9, 1906',
      full_name: 'Grace Hopper'
    }
  })

  // method 2, modifies if exists
  usersRef.child('adalove').set({
    date_of_birth: 'December 10, 1815',
    full_name: 'Ada Lovelace'
  }, error => console.log('sets done'))
}

function updateUser(db) {
  // single key path, each property specified is overwritten
  const hopperRef= db.child('users/gracehop')
  hopperRef.update({
    nickname: 'Amazing Grace'
  })

  // multipath update, allows modification of properties within objects
  const usersRef= db.child('users')
  usersRef.update({
    'alanisawesome/nickname': 'Alan The Machine',
    'adalove/nickname': 'The Enchantress of Numbers',
  }, error => console.log('updates done'))
}

function pushPosts(db) {
  // autogenerated keys will be based on a timestamp
  const postsRef= db.child('posts')

  // pushing, then set
  const newPostRef= postsRef.push()
  newPostRef.set({
    author: 'gracehop',
    title: 'Announcing COBOL, a New Programming Language'
  })

  // chaining push and set
  postsRef.push().set({
    author: 'alanisawesome',
    title:'The Turing Machine'
  })

  // implicit chaining push and set, getting ref to post
  let postRef= postsRef.push({
    author: 'adalove',
    title: 'The Analytical Engine, fiction or future?'
  })

  console.log(postRef.key())

  // transactions
  const upvotesRef= {} //= postRef.get('upvotes')?
  upvotesRef.transaction(
    val => (val ||Â 0) + 1,
    () => console.log('completed')
  )
}

export default class Blog extends React.Component {
  render() {
    return <div></div>
  }

  componentDidMount() {
    this.db= new Firebase('https://vivid-torch-7223.firebaseio.com/web/saving-data/fireblog')
    createUsers(this.db)
    updateUser(this.db)
    //pushPosts(this.db)
  }
}
